appName: app-orders

app:
  dbHost: app-orders-db-postgresql.kirshov-otus.svc.cluster.local
  dbUser: postgres
  dbPass: postgres_pass
  dbName: orders
  redisHost: redis-master.kirshov-otus.svc.cluster.local
  redisPort: 6379
  redisPassword: redis-pass
  rabbitHost: rabbit-rabbitmq.kirshov-otus.svc.cluster.local
  rabbitPort: 5672
  rabbitUser: admin
  rabbitPassword: rabbit-pass
  storegUrl: 'http://service-store:80'
  billingUrl: 'http://service-billing:80'
  notifyUrl: 'http://service-notify:80'

replicaCount: 1

ordersService:
  name: app-orders
  image: kirshov/otus-orders-service:latest
  port:
    name: app-orders-port
    containerPort: 8003
  envFrom:
    - configMapRef:
        name: app-orders-env

serviceNginx:
  name: nginx
  image: nginx:latest
  volumeMounts:
    - name: app-orders-nginx-config
      mountPath: '/etc/nginx/conf.d'
  portNumber: 80
  portName: nginx

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

service:
  type: ClusterIP
  port: 80
  name: service-orders
  portName: "orders-web"

ingress:
  name: ingress-orders
  enabled: false
  className: "nginx"
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    nginx.ingress.kubernetes.io/auth-url: "http://service-users.kirshov-otus.svc.cluster.local/auth"
    nginx.ingress.kubernetes.io/auth-signin: "http://service-users.kirshov-otus.svc.cluster.local/signin"
    nginx.ingress.kubernetes.io/auth-response-headers: "X-Token"
  hosts:
    - host: otus.project
      paths:
        - path: /orders(/|$)(.*)
          pathType: ImplementationSpecific
  tls: []

resources: {}

volumes:
  - name: app-orders-nginx-config
    configMap:
      name: app-orders-nginx-config

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80

configMaps:
  nginxOrdersConfigMap: app-orders-nginx-config
  ordersConfigMap: app-orders-env

migrationJob:
  name: orders-schema-migration-job
  containers:
    - name: orders-schema-update
      image: kirshov/otus-orders-service:latest
      command: [ '/bin/sh', '-c', 'php ./vendor/bin/phoenix migrate --config=./src/config/pheonix.php' ]
      envFrom:
        - configMapRef:
            name: app-orders-env
  restartPolicy: Never
  backoffLimit: 4